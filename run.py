import argparse
import pandas as pd
from process_queries import process_all


def main():
    parser = argparse.ArgumentParser(description="Traiter un CSV avec plusieurs instances Ollama.")
    parser.add_argument("input_csv", help="Chemin vers le fichier CSV d'entrÃ©e (avec une colonne 'query').")
    parser.add_argument("-o", "--output_csv", help="Fichier de sortie", default="resultat.csv")
    parser.add_argument("-i", "--instances", nargs="+", required=True,
                        help="Liste des URLs Ollama (ex: http://localhost:11434 http://localhost:11435)")

    args = parser.parse_args()

    print("ðŸ“¥ Lecture du fichier CSV...")
    df = pd.read_csv(args.input_csv)

    if 'query' not in df.columns:
        raise ValueError("Le fichier CSV doit contenir une colonne nommÃ©e 'query'.")

    prompt = (
        "Voici une requÃªte utilisateur.\n"
        "RÃ©ponds uniquement par Â« export Â» si la demande implique lâ€™extraction de donnÃ©es (fichier, liste, emails, tÃ©lÃ©phoneâ€¦).\n"
        "Sinon, rÃ©ponds par Â« autre Â».\n"
        "Ne fais aucune autre phrase ni explication."
    )

    print(f"ðŸŸ¢ Lancement du traitement sur {len(args.instances)} instance(s) Ollama...")
    df_result = process_all(df, prompt, args.instances)

    print(f"ðŸ’¾ Sauvegarde dans {args.output_csv}...")
    df_result.to_csv(args.output_csv, index=False)
    print("âœ… RÃ©sultat final enregistrÃ© dans", args.output_csv)


if __name__ == "__main__":
    main()
